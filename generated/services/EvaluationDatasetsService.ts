/* generated using openapi-typescript-codegen -- do not edit */
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
import type { ApproveAutoGeneratedDraftTestCaseResponse } from '../models/ApproveAutoGeneratedDraftTestCaseResponse';
import type { AutoGeneratedDraftTestCaseApproveBatchRequest } from '../models/AutoGeneratedDraftTestCaseApproveBatchRequest';
import type { AutoGeneratedDraftTestCaseApproveBatchResponse } from '../models/AutoGeneratedDraftTestCaseApproveBatchResponse';
import type { AutoGeneratedDraftTestCaseRequest } from '../models/AutoGeneratedDraftTestCaseRequest';
import type { AutoGeneratedDraftTestCaseResponse } from '../models/AutoGeneratedDraftTestCaseResponse';
import type { Body_POST_V4__v4_evaluation_datasets_generate_harms } from '../models/Body_POST_V4__v4_evaluation_datasets_generate_harms';
import type { CreateEvaluationDatasetGenerationJobRequest } from '../models/CreateEvaluationDatasetGenerationJobRequest';
import type { CreateEvaluationDatasetGenerationJobResponse } from '../models/CreateEvaluationDatasetGenerationJobResponse';
import type { CreateEvaluationDatasetRequest } from '../models/CreateEvaluationDatasetRequest';
import type { DeleteEvaluationDatasetDraftResponse } from '../models/DeleteEvaluationDatasetDraftResponse';
import type { DeleteResponse } from '../models/DeleteResponse';
import type { egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse } from '../models/egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse';
import type { EvaluationDatasetDataLocs } from '../models/EvaluationDatasetDataLocs';
import type { EvaluationDatasetResponse } from '../models/EvaluationDatasetResponse';
import type { EvaluationDatasetResponseWithViews } from '../models/EvaluationDatasetResponseWithViews';
import type { EvaluationDatasetVersionRequest } from '../models/EvaluationDatasetVersionRequest';
import type { EvaluationDatasetVersionResponse } from '../models/EvaluationDatasetVersionResponse';
import type { EvaluationDatasetViewsOptions } from '../models/EvaluationDatasetViewsOptions';
import type { GenerateHarmsResponse } from '../models/GenerateHarmsResponse';
import type { GetEvaluationDatasetGenerationJobResponse } from '../models/GetEvaluationDatasetGenerationJobResponse';
import type { ListAutoGeneratedDraftTestCaseResponse } from '../models/ListAutoGeneratedDraftTestCaseResponse';
import type { ListEvaluationDatasetGenerationJobsResponse } from '../models/ListEvaluationDatasetGenerationJobsResponse';
import type { PaginatedEvaluationDatasetResponseWithViews } from '../models/PaginatedEvaluationDatasetResponseWithViews';
import type { PaginatedEvaluationDatasetVersionResponse } from '../models/PaginatedEvaluationDatasetVersionResponse';
import type { PaginatedTestCaseVersionResponse } from '../models/PaginatedTestCaseVersionResponse';
import type { PartialAutoGeneratedDraftTestCaseRequest } from '../models/PartialAutoGeneratedDraftTestCaseRequest';
import type { PublishEvaluationDatasetDraftResponse } from '../models/PublishEvaluationDatasetDraftResponse';
import type { RestorablePartialTestCaseVersionRequest } from '../models/RestorablePartialTestCaseVersionRequest';
import type { RestorablePatchEvaluationDatasetRequest } from '../models/RestorablePatchEvaluationDatasetRequest';
import type { TestCaseVersionRequest } from '../models/TestCaseVersionRequest';
import type { CancelablePromise } from '../core/CancelablePromise';
import { OpenAPI } from '../core/OpenAPI';
import { request as __request } from '../core/request';
export class EvaluationDatasetsService {
    /**
     * List Evaluation Datasets
     * ### Description
     * Lists all evaluation datasets accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation datasets. If a user has access to multiple accounts, all evaluation datasets from all accounts the user is associated with will be returned.
     * @param view
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns EvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasets(
        view?: (Array<EvaluationDatasetViewsOptions> | null),
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<EvaluationDatasetResponseWithViews>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'view': view,
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset
     * ### Description
     * Creates a evaluation dataset
     *
     * ### Details
     * This API can be used to create a evaluation dataset. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset.
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static postV2EvaluationDatasets(
        requestBody: CreateEvaluationDatasetRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset
     * ### Description
     *
     * Gets the details of a dataset.
     * @param evaluationDatasetId
     * @param view
     * @returns EvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        view?: (Array<EvaluationDatasetViewsOptions> | null),
    ): CancelablePromise<EvaluationDatasetResponseWithViews> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            query: {
                'view': view,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Evaluation Dataset
     * ### Description
     * Updates a evaluation dataset
     *
     * ### Details
     * This API can be used to update the evaluation dataset that matches the ID that was passed in as a path parameter. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset API call as a path parameter.
     *
     * Review the request schema to see the fields that can be updated.
     * @param evaluationDatasetId
     * @param requestBody
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static patchV2EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        requestBody: RestorablePatchEvaluationDatasetRequest,
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Evaluation Dataset
     * ### Description
     *
     * Deletes the dataset, and all other entities associated with the dataset, such as test cases, evaluations and results.
     *
     * ### Details
     *
     * **This is a permanent and destructive action that cannot be undone.**
     * @param evaluationDatasetId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV2EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Evaluation Dataset Versions
     * ### Description
     * Lists all evaluation dataset versions accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation dataset versions. If a user has access to multiple accounts, all evaluation dataset versions from all accounts the user is associated with will be returned.
     * @param evaluationDatasetId
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<EvaluationDatasetVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset Version
     * ### Description
     * Creates a evaluation dataset version
     *
     * ### Details
     * This API can be used to create a evaluation dataset version. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset version.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV2EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        requestBody: EvaluationDatasetVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset Version
     * ### Description
     * Gets the details of a evaluation dataset version
     *
     * ### Details
     * This API can be used to get information about a single evaluation dataset version by ID. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset Version API call as a path parameter.
     *
     * Review the response schema to see the fields that will be returned.
     * @param evaluationDatasetId
     * @param evaluationDatasetVersionId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersionsEvaluationDatasetVersionId(
        evaluationDatasetId: string,
        evaluationDatasetVersionId: string,
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions/{evaluation_dataset_version_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'evaluation_dataset_version_id': evaluationDatasetVersionId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Test Cases
     * ### Description
     * List all test cases for a selected dataset.
     * @param evaluationDatasetId
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Test Case
     * ### Description
     * Create a test case for a selected dataset.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV2EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        requestBody: TestCaseVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Batch Create Test Cases
     * ### Description
     * Creates a batch of test cases
     *
     * ### Details
     * This API can be used to create multiple test cases so users do not have to the incur the cost of repeated network calls. To use this API, pass in a list of test cases in the request body.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV2EvaluationDatasetsEvaluationDatasetIdTestCasesBatch(
        evaluationDatasetId: string,
        requestBody: Array<TestCaseVersionRequest>,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/batch',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Test Case
     * ### Description
     * Update a test case.
     * @param evaluationDatasetId
     * @param testCaseId
     * @param requestBody
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static patchV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
        requestBody: RestorablePartialTestCaseVersionRequest,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Test Case
     * ### Description
     * Delete a specified test case -- retaining older version belonging to older dataset versions.
     *
     * ### Details
     * This request shouldn't be used when deleting due to compliance reasons. See Wipe action.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Historical Test Case
     * ### Description
     * Get the test case by its id for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistoryNum(
        num: string,
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get All Versions of Test Case
     * Get all versions of a Test Case by lineage ID.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Wipe Full History of Test Cases
     * ### Description
     * Delete a specified test case and remove all its history from past dataset versions too.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV2EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Historical Test Cases
     * ### Description
     * List all test cases for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param accountId
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdTestCasesHistoryNum(
        num: string,
        evaluationDatasetId: string,
        accountId?: (string | null),
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/test-cases/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Autogenerated Draft Test Case
     * ### Description
     * Creates a autogenerated draft test case
     *
     * ### Details
     * This API can be used to create a autogenerated draft test case. To use this API, review the request schema and pass in all fields that are required to create a autogenerated draft test case.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static postV2EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCases(
        evaluationDatasetId: string,
        requestBody: AutoGeneratedDraftTestCaseRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Autogenerated Draft Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static getV2EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Autogenerated Draft Test Case
     * ### Description
     * Update a test case draft.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @param requestBody
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static patchV2EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
        requestBody: PartialAutoGeneratedDraftTestCaseRequest,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Autogenerated Draft Test Case
     * ### Description
     * Delete a specified draft test case. This version will not be retained.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV2EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v2/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Evaluation Datasets
     * ### Description
     * Lists all evaluation datasets accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation datasets. If a user has access to multiple accounts, all evaluation datasets from all accounts the user is associated with will be returned.
     * @param view
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns EvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasets(
        view?: (Array<EvaluationDatasetViewsOptions> | null),
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<EvaluationDatasetResponseWithViews>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'view': view,
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset
     * ### Description
     * Creates a evaluation dataset
     *
     * ### Details
     * This API can be used to create a evaluation dataset. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset.
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static postV3EvaluationDatasets(
        requestBody: CreateEvaluationDatasetRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v3/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset
     * ### Description
     *
     * Gets the details of a dataset.
     * @param evaluationDatasetId
     * @param view
     * @returns EvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        view?: (Array<EvaluationDatasetViewsOptions> | null),
    ): CancelablePromise<EvaluationDatasetResponseWithViews> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            query: {
                'view': view,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Evaluation Dataset
     * ### Description
     * Updates a evaluation dataset
     *
     * ### Details
     * This API can be used to update the evaluation dataset that matches the ID that was passed in as a path parameter. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset API call as a path parameter.
     *
     * Review the request schema to see the fields that can be updated.
     * @param evaluationDatasetId
     * @param requestBody
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static patchV3EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        requestBody: RestorablePatchEvaluationDatasetRequest,
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Evaluation Dataset
     * ### Description
     *
     * Deletes the dataset, and all other entities associated with the dataset, such as test cases, evaluations and results.
     *
     * ### Details
     *
     * **This is a permanent and destructive action that cannot be undone.**
     * @param evaluationDatasetId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV3EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Evaluation Dataset Versions
     * ### Description
     * Lists all evaluation dataset versions accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation dataset versions. If a user has access to multiple accounts, all evaluation dataset versions from all accounts the user is associated with will be returned.
     * @param evaluationDatasetId
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<EvaluationDatasetVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset Version
     * ### Description
     * Creates a evaluation dataset version
     *
     * ### Details
     * This API can be used to create a evaluation dataset version. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset version.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV3EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        requestBody: EvaluationDatasetVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset Version
     * ### Description
     * Gets the details of a evaluation dataset version
     *
     * ### Details
     * This API can be used to get information about a single evaluation dataset version by ID. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset Version API call as a path parameter.
     *
     * Review the response schema to see the fields that will be returned.
     * @param evaluationDatasetId
     * @param evaluationDatasetVersionId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersionsEvaluationDatasetVersionId(
        evaluationDatasetId: string,
        evaluationDatasetVersionId: string,
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions/{evaluation_dataset_version_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'evaluation_dataset_version_id': evaluationDatasetVersionId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Test Cases
     * ### Description
     * List all test cases for a selected dataset.
     * @param evaluationDatasetId
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Test Case
     * ### Description
     * Create a test case for a selected dataset.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV3EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        requestBody: TestCaseVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Batch Create Test Cases
     * ### Description
     * Creates a batch of test cases
     *
     * ### Details
     * This API can be used to create multiple test cases so users do not have to the incur the cost of repeated network calls. To use this API, pass in a list of test cases in the request body.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV3EvaluationDatasetsEvaluationDatasetIdTestCasesBatch(
        evaluationDatasetId: string,
        requestBody: Array<TestCaseVersionRequest>,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/batch',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Test Case
     * ### Description
     * Update a test case.
     * @param evaluationDatasetId
     * @param testCaseId
     * @param requestBody
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static patchV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
        requestBody: RestorablePartialTestCaseVersionRequest,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Test Case
     * ### Description
     * Delete a specified test case -- retaining older version belonging to older dataset versions.
     *
     * ### Details
     * This request shouldn't be used when deleting due to compliance reasons. See Wipe action.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Historical Test Case
     * ### Description
     * Get the test case by its id for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistoryNum(
        num: string,
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get All Versions of Test Case
     * Get all versions of a Test Case by lineage ID.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Wipe Full History of Test Cases
     * ### Description
     * Delete a specified test case and remove all its history from past dataset versions too.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV3EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Historical Test Cases
     * ### Description
     * List all test cases for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param accountId
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdTestCasesHistoryNum(
        num: string,
        evaluationDatasetId: string,
        accountId?: (string | null),
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/test-cases/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'account_id': accountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Autogenerated Draft Test Case
     * ### Description
     * Creates a autogenerated draft test case
     *
     * ### Details
     * This API can be used to create a autogenerated draft test case. To use this API, review the request schema and pass in all fields that are required to create a autogenerated draft test case.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static postV3EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCases(
        evaluationDatasetId: string,
        requestBody: AutoGeneratedDraftTestCaseRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Autogenerated Draft Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static getV3EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Autogenerated Draft Test Case
     * ### Description
     * Update a test case draft.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @param requestBody
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static patchV3EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
        requestBody: PartialAutoGeneratedDraftTestCaseRequest,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Autogenerated Draft Test Case
     * ### Description
     * Delete a specified draft test case. This version will not be retained.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV3EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v3/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Evaluation Datasets
     * ### Description
     * Lists all evaluation datasets accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation datasets. If a user has access to multiple accounts, all evaluation datasets from all accounts the user is associated with will be returned.
     * @param view
     * @param page Page number for pagination to be returned by the given endpoint. Starts at page 1
     * @param limit Maximum number of artifacts to be returned by the given endpoint. Defaults to 100 and cannot be greater than 10k.
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns PaginatedEvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasets(
        view?: (Array<EvaluationDatasetViewsOptions> | null),
        page: number = 1,
        limit: number = 100,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PaginatedEvaluationDatasetResponseWithViews> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'view': view,
                'page': page,
                'limit': limit,
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset
     * ### Description
     * Creates a evaluation dataset
     *
     * ### Details
     * This API can be used to create a evaluation dataset. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset.
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasets(
        requestBody: CreateEvaluationDatasetRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets',
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset
     * ### Description
     *
     * Gets the details of a dataset.
     * @param evaluationDatasetId
     * @param view
     * @returns EvaluationDatasetResponseWithViews Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        view?: (Array<EvaluationDatasetViewsOptions> | null),
    ): CancelablePromise<EvaluationDatasetResponseWithViews> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            query: {
                'view': view,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Evaluation Dataset
     * ### Description
     * Updates a evaluation dataset
     *
     * ### Details
     * This API can be used to update the evaluation dataset that matches the ID that was passed in as a path parameter. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset API call as a path parameter.
     *
     * Review the request schema to see the fields that can be updated.
     * @param evaluationDatasetId
     * @param requestBody
     * @returns EvaluationDatasetResponse Successful Response
     * @throws ApiError
     */
    public static patchV4EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
        requestBody: RestorablePatchEvaluationDatasetRequest,
    ): CancelablePromise<EvaluationDatasetResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Evaluation Dataset
     * ### Description
     *
     * Deletes the dataset, and all other entities associated with the dataset, such as test cases, evaluations and results.
     *
     * ### Details
     *
     * **This is a permanent and destructive action that cannot be undone.**
     * @param evaluationDatasetId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV4EvaluationDatasetsEvaluationDatasetId(
        evaluationDatasetId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Evaluation Dataset Versions
     * ### Description
     * Lists all evaluation dataset versions accessible to the user.
     *
     * ### Details
     * This API can be used to list evaluation dataset versions. If a user has access to multiple accounts, all evaluation dataset versions from all accounts the user is associated with will be returned.
     * @param evaluationDatasetId
     * @param page Page number for pagination to be returned by the given endpoint. Starts at page 1
     * @param limit Maximum number of artifacts to be returned by the given endpoint. Defaults to 100 and cannot be greater than 10k.
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns PaginatedEvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        page: number = 1,
        limit: number = 100,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PaginatedEvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'page': page,
                'limit': limit,
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset Version
     * ### Description
     * Creates a evaluation dataset version
     *
     * ### Details
     * This API can be used to create a evaluation dataset version. To use this API, review the request schema and pass in all fields that are required to create a evaluation dataset version.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersions(
        evaluationDatasetId: string,
        requestBody: EvaluationDatasetVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset Version
     * ### Description
     * Gets the details of a evaluation dataset version
     *
     * ### Details
     * This API can be used to get information about a single evaluation dataset version by ID. To use this API, pass in the `id` that was returned from your Create Evaluation Dataset Version API call as a path parameter.
     *
     * Review the response schema to see the fields that will be returned.
     * @param evaluationDatasetId
     * @param evaluationDatasetVersionId
     * @returns EvaluationDatasetVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdEvaluationDatasetVersionsEvaluationDatasetVersionId(
        evaluationDatasetId: string,
        evaluationDatasetVersionId: string,
    ): CancelablePromise<EvaluationDatasetVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions/{evaluation_dataset_version_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'evaluation_dataset_version_id': evaluationDatasetVersionId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Test Cases
     * ### Description
     * List all test cases for a selected dataset.
     * @param evaluationDatasetId
     * @param page Page number for pagination to be returned by the given endpoint. Starts at page 1
     * @param limit Maximum number of artifacts to be returned by the given endpoint. Defaults to 100 and cannot be greater than 10k.
     * @param accountId
     * @param includeArchived
     * @param xSelectedAccountId
     * @returns PaginatedTestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        page: number = 1,
        limit: number = 100,
        accountId?: (string | null),
        includeArchived: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PaginatedTestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'page': page,
                'limit': limit,
                'account_id': accountId,
                'include_archived': includeArchived,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Test Case
     * ### Description
     * Create a test case for a selected dataset.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasetsEvaluationDatasetIdTestCases(
        evaluationDatasetId: string,
        requestBody: TestCaseVersionRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Batch Create Test Cases
     * ### Description
     * Creates a batch of test cases
     *
     * ### Details
     * This API can be used to create multiple test cases so users do not have to the incur the cost of repeated network calls. To use this API, pass in a list of test cases in the request body.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasetsEvaluationDatasetIdTestCasesBatch(
        evaluationDatasetId: string,
        requestBody: Array<TestCaseVersionRequest>,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/batch',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Test Case
     * ### Description
     * Update a test case.
     * @param evaluationDatasetId
     * @param testCaseId
     * @param requestBody
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static patchV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
        requestBody: RestorablePartialTestCaseVersionRequest,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Test Case
     * ### Description
     * Delete a specified test case -- retaining older version belonging to older dataset versions.
     *
     * ### Details
     * This request shouldn't be used when deleting due to compliance reasons. See Wipe action.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseId(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Historical Test Case
     * ### Description
     * Get the test case by its id for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistoryNum(
        num: string,
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get All Versions of Test Case
     * Get all versions of a Test Case by lineage ID.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<Array<egp_api_backend__server__api__models__eval_models_no_gen__TestCaseVersionResponse>> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Wipe Full History of Test Cases
     * ### Description
     * Delete a specified test case and remove all its history from past dataset versions too.
     * @param evaluationDatasetId
     * @param testCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV4EvaluationDatasetsEvaluationDatasetIdTestCasesTestCaseIdHistory(
        evaluationDatasetId: string,
        testCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/{test_case_id}/history',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'test_case_id': testCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Historical Test Cases
     * ### Description
     * List all test cases for a specified dataset version.
     * @param num
     * @param evaluationDatasetId
     * @param page Page number for pagination to be returned by the given endpoint. Starts at page 1
     * @param limit Maximum number of artifacts to be returned by the given endpoint. Defaults to 100 and cannot be greater than 10k.
     * @param accountId
     * @param xSelectedAccountId
     * @returns PaginatedTestCaseVersionResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdTestCasesHistoryNum(
        num: string,
        evaluationDatasetId: string,
        page: number = 1,
        limit: number = 100,
        accountId?: (string | null),
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PaginatedTestCaseVersionResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/test-cases/history/{num}',
            path: {
                'num': num,
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'page': page,
                'limit': limit,
                'account_id': accountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Autogenerated Draft Test Case
     * ### Description
     * Creates a autogenerated draft test case
     *
     * ### Details
     * This API can be used to create a autogenerated draft test case. To use this API, review the request schema and pass in all fields that are required to create a autogenerated draft test case.
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCases(
        evaluationDatasetId: string,
        requestBody: AutoGeneratedDraftTestCaseRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * List Autogenerated Draft Test Cases
     * @param evaluationDatasetId
     * @param checkMissingChunks Check if test cases are based on missing chunks
     * @param page Page number for pagination to be returned by the given endpoint. Starts at page 1
     * @param limit Maximum number of artifacts to be returned by the given endpoint. Defaults to 100 and cannot be greater than 10k.
     * @param xSelectedAccountId
     * @returns ListAutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static getV4AutogeneratedDraftTestCases(
        evaluationDatasetId: string,
        checkMissingChunks: boolean = false,
        page: number = 1,
        limit: number = 100,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<ListAutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'check_missing_chunks': checkMissingChunks,
                'page': page,
                'limit': limit,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Autogenerated Draft Test Case
     * ### Description
     * Get the test case by its id.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static getV4EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Update Autogenerated Draft Test Case
     * ### Description
     * Update a test case draft.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @param requestBody
     * @returns AutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static patchV4EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
        requestBody: PartialAutoGeneratedDraftTestCaseRequest,
    ): CancelablePromise<AutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Autogenerated Draft Test Case
     * ### Description
     * Delete a specified draft test case. This version will not be retained.
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @returns DeleteResponse Successful Response
     * @throws ApiError
     */
    public static deleteV4EvaluationDatasetsEvaluationDatasetIdAutogeneratedDraftTestCasesAutogeneratedDraftTestCaseId(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
    ): CancelablePromise<DeleteResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Approve Autogenerated Draft Test Case
     * @param evaluationDatasetId
     * @param autogeneratedDraftTestCaseId
     * @param force Force approve a failing test case
     * @param xSelectedAccountId
     * @returns ApproveAutoGeneratedDraftTestCaseResponse Successful Response
     * @throws ApiError
     */
    public static postV4AutogeneratedDraftTestCasesAutogeneratedDraftTestCaseIdApprove(
        evaluationDatasetId: string,
        autogeneratedDraftTestCaseId: string,
        force: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<ApproveAutoGeneratedDraftTestCaseResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/autogenerated-draft-test-cases/{autogenerated_draft_test_case_id}/approve',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'autogenerated_draft_test_case_id': autogeneratedDraftTestCaseId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'force': force,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Publish Latest Evaluation Dataset Version
     * @param evaluationDatasetId
     * @param force Force approve an evaluation dataset
     * @param xSelectedAccountId
     * @returns PublishEvaluationDatasetDraftResponse Successful Response
     * @throws ApiError
     */
    public static postV4Publish(
        evaluationDatasetId: string,
        force: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PublishEvaluationDatasetDraftResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/publish',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'force': force,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Approve Auto Generated Test Cases Batch
     * @param evaluationDatasetId
     * @param requestBody
     * @param force Force approve a batch of autogenerated test case IDs for the evaluation dataset
     * @param xSelectedAccountId
     * @returns AutoGeneratedDraftTestCaseApproveBatchResponse Successful Response
     * @throws ApiError
     */
    public static postV4ApproveBatch(
        evaluationDatasetId: string,
        requestBody: AutoGeneratedDraftTestCaseApproveBatchRequest,
        force: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<AutoGeneratedDraftTestCaseApproveBatchResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/approve-batch',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'force': force,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset Generation Jobs
     * @param evaluationDatasetId
     * @param xSelectedAccountId
     * @returns ListEvaluationDatasetGenerationJobsResponse Successful Response
     * @throws ApiError
     */
    public static getV4GenerationJobs(
        evaluationDatasetId: string,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<ListEvaluationDatasetGenerationJobsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/generation-jobs',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Create Evaluation Dataset Generation Job
     * @param evaluationDatasetId
     * @param requestBody
     * @param xSelectedAccountId
     * @returns CreateEvaluationDatasetGenerationJobResponse Successful Response
     * @throws ApiError
     */
    public static postV4GenerationJobs(
        evaluationDatasetId: string,
        requestBody: CreateEvaluationDatasetGenerationJobRequest,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<CreateEvaluationDatasetGenerationJobResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/generation-jobs',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Evaluation Dataset Generation Job
     * @param evaluationDatasetId
     * @param generationJobId
     * @param xSelectedAccountId
     * @returns GetEvaluationDatasetGenerationJobResponse Successful Response
     * @throws ApiError
     */
    public static getV4GenerationJobsGenerationJobId(
        evaluationDatasetId: string,
        generationJobId: string,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<GetEvaluationDatasetGenerationJobResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/generation-jobs/{generation_job_id}',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'generation_job_id': generationJobId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Cancel Evaluation Dataset Generation Job
     * @param evaluationDatasetId
     * @param generationJobId
     * @param xSelectedAccountId
     * @returns any Successful Response
     * @throws ApiError
     */
    public static postV4GenerationJobsGenerationJobIdCancel(
        evaluationDatasetId: string,
        generationJobId: string,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<any> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/generation-jobs/{generation_job_id}/cancel',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'generation_job_id': generationJobId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Publish Evaluation Dataset Version
     * @param evaluationDatasetId
     * @param evaluationDatasetVersionId
     * @param force Force approve an evaluation dataset
     * @param xSelectedAccountId
     * @returns PublishEvaluationDatasetDraftResponse Successful Response
     * @throws ApiError
     */
    public static postV4EvaluationDatasetVersionsEvaluationDatasetVersionIdPublish(
        evaluationDatasetId: string,
        evaluationDatasetVersionId: string,
        force: boolean = false,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<PublishEvaluationDatasetDraftResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/evaluation-dataset-versions/{evaluation_dataset_version_id}/publish',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
                'evaluation_dataset_version_id': evaluationDatasetVersionId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'force': force,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Generate Harms
     * @param requestBody
     * @returns GenerateHarmsResponse Successful Response
     * @throws ApiError
     */
    public static postV4V4EvaluationDatasetsGenerateHarms(
        requestBody: Body_POST_V4__v4_evaluation_datasets_generate_harms,
    ): CancelablePromise<GenerateHarmsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/generate-harms',
            body: requestBody,
            mediaType: 'application/json',
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Delete Evaluation Dataset Draft
     * @param evaluationDatasetId
     * @param xSelectedAccountId
     * @returns DeleteEvaluationDatasetDraftResponse Successful Response
     * @throws ApiError
     */
    public static postV4DeleteDraft(
        evaluationDatasetId: string,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<DeleteEvaluationDatasetDraftResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/delete-draft',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
    /**
     * Get Data Locs
     * @param evaluationDatasetId
     * @param versionNum
     * @param xSelectedAccountId
     * @returns EvaluationDatasetDataLocs Successful Response
     * @throws ApiError
     */
    public static getV4DataLocs(
        evaluationDatasetId: string,
        versionNum: number,
        xSelectedAccountId?: (string | null),
    ): CancelablePromise<EvaluationDatasetDataLocs> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/v4/evaluation-datasets/{evaluation_dataset_id}/data-locs',
            path: {
                'evaluation_dataset_id': evaluationDatasetId,
            },
            headers: {
                'x-selected-account-id': xSelectedAccountId,
            },
            query: {
                'version_num': versionNum,
            },
            errors: {
                422: `Validation Error`,
            },
        });
    }
}
